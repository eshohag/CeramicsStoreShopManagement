@model CeramicsStoreShopManagement.Models.ViewModel.ClientViewModel

@{
    ViewBag.Title = "Selected Product";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-12">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6">
            <fieldset>
                <legend>Confirm Selling Product</legend>
                <div class="form-group">
                    @Html.LabelFor(model => model.NameClient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NameClient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NameClient, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactNoClient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactNoClient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactNoClient, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressClient, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddressClient, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressClient, "", new { @class = "text-danger" })
                    </div>
                </div>


            </fieldset>
            <fieldset>
                <legend>Reference Details</legend>
                <div class="form-group">
                    @Html.LabelFor(model => model.NameRefe, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NameRefe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NameRefe, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ContactRefe, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactRefe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactRefe, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressRefe, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddressRefe, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressRefe, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>


        </div>
        <div class="col-md-6">
            <fieldset>
                <legend>Payment Details</legend>
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalCost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input value="@ViewBag.Total" name="TotalCost" id="TotalCost" readonly class="form-control" />
                        @Html.ValidationMessageFor(model => model.TotalCost, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.TotalPayableCost, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.TotalPayableCost, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TotalPayableCost, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <div class="form-group col-md-12">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Confirm Selling" class="btn btn-danger" />
                </div>
            </div>
        </div>
    </div>
}

<div class="col-md-12">
    <a href="javascript:void(0);" onclick="history.go(-1);">Back to Product Details</a>
    @*<a href="javascript:void(0);" id="backLink">Back to Details</a>*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    @*<script type="text/javascript">
            $(document).on('click', '#backLink', function () {
                history.go(-1);
            });
        </script>*@


}




